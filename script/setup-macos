#!/bin/bash

# ===============================
# Install xcode
# ===============================

if [ -z "$(xcode-select -p)" ]; then
		echo "INFO: Install developer tools."
		xcode-select --install
fi


# ===============================
# Install brew
# ===============================

echo "INFO: Install brew on MacOS."
if [ -z "$(which brew)" ]; then
		/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

		if [ -n "$ARCH_ARM" ]; then
				echo "INFO: Invoke brew shellenv (M1)."

				eval "$(/opt/homebrew/bin/brew shellenv)"
		elif [ -n "$ARCH_X86" ]; then 
				echo "INFO: Invoke brew shellenv (Intel)."

				eval "$(/usr/local/homebrew/bin/brew shellenv)"
		fi
fi

# ===============================
# Homebrew Path Configuration
# ===============================

echo "Configuring Homebrew paths based on architecture..."

if [ "$ARCH_ARM" == "1" ]; then
    echo "Apple Silicon (ARM) detected."
    HOMEBREW_PREFIX="/opt/homebrew"
elif [ "$ARCH_X86" == "1" ]; then
    echo "Intel (x86_64) architecture detected."
    HOMEBREW_PREFIX="/usr/local"
else
    echo "Architecture not supported."
    exit 1
fi

if [ -z "CLOUD"]; then
		# ===============================
		# Install 1Password via brew
		# ===============================
		
		echo "Installing homebrew 1pass deps..."
		OP_BREWFILE="$DOTFILES_DIR/.brewfile.1pass"

		# Verify Brewfiles exist
		if [ ! -f "$OP_BREWFILE" ]; then
			echo "1pass Brewfile ($1PASS_BREWFILE) not found."
			exit 1
		fi

		brew bundle --verbose --file="$OP_BREWFILE"

		echo "Successfully installed 1pass packages."

		# ===============================
		# Prompt to Login to 1Password and Enable SSH Agent
		# ===============================

		echo "Please log in to 1Password and enable the SSH Agent."
		echo "1Password > Sign-in > Preferences > Developer"
		read -p "After completing the above steps, press Enter to continue..."


		# ===============================
		# Link 1Password SSH Key
		# ===============================

		echo "Linking 1Password SSH key..."
		mkdir -p "$HOME/.1password"
		ln -sf "$HOME/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock" "$HOME/.1password/agent.sock"
		echo "1Password SSH key linked at $HOME/.1password/agent.sock."

		SSH_AUTH_SOCK=~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock

fi

# ===============================
# Apply macOS Defaults
# ===============================

if [ "$ARCH_ARM" == "1" ] || [ "$ARCH_X86" == "1" ]; then
    if [ -f "$DOTFILES/dot_osx" ]; then
        echo "Applying macOS defaults from $DOTFILES/dot_osx..."
	source $DOTFILES_DIR/dot_osx
	echo "macOS defaults applied."
    else
        echo "macOS defaults file $DOTFILES/dot_osx not found. Skipping."
    fi
fi
