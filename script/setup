#!/bin/bash

# Log dotfiles setup
exec > >(tee -i $HOME/log/dotfiles_install.log)
exec 2>&1

set -e

DOTFILES_DIR="$(git rev-parse --show-toplevel)"

# ===============================
# Detect OS and Arch
# ===============================

[ -f dot_detect_os ] && source dot_detect_os
[ -f dot_detect_arch ] && source dot_detect_arch
[ -f dot_detect_cloud ] && source dot_detect_cloud

if [ -n "$OS_MAC" ]; then
		source "$DOTFILES_DIR/script/setup-macos"
fi

if [ -n "$OS_LINUX" ]; then
		source "$DOTFILES_DIR/script/setup-linux"
fi

# ===============================
# Homebrew Environment Variables
# ===============================

ARCH_FILE="$HOME/.zsh_arch"

echo "Generating .zsh_arch based on system architecture..."
cat > "$ARCH_FILE" <<EOL

export HOMEBREW_PREFIX="$HOMEBREW_PREFIX"
export HOMEBREW_CELLAR="\$HOMEBREW_PREFIX/Cellar"
export PATH="\$HOMEBREW_PREFIX/bin:\$PATH"
EOL

echo "âœ… .zsh_arch successfully generated."

# ===============================
# Install Core Homebrew Dependencies
# ===============================

echo "Installing homebrew core deps..."
CORE_BREWFILE="$DOTFILES_DIR/.brewfile.core"

# Verify Brewfiles exist
if [ ! -f "$CORE_BREWFILE" ]; then
    echo "Core Brewfile ($CORE_BREWFILE) not found."
    exit 1
fi

brew bundle --verbose --file="$CORE_BREWFILE"

echo "Successfully installed core packages."

# ===============================
# Apply dotfiles
# ===============================

if chezmoi source-path >/dev/null 2>&1; then
    echo "Chezmoi is already initialized. Applying dotfiles..."
    chezmoi apply
else
    echo "Chezmoi is not initialized. Initializing now..."
    chezmoi init --apply bry-guy
fi

# ===============================
# Accept SSH Fingerprints
# ===============================

echo "Adding SSH fingerprints to known_hosts if not already present..."

ssh_hosts=(
    "github.com"
)

for host in "${ssh_hosts[@]}"; do
    if ! ssh-keygen -F "$host" >/dev/null; then
        echo "Adding $host to ~/.ssh/known_hosts..."
        ssh-keyscan -H "$host" >> "$HOME/.ssh/known_hosts"
        echo "Added $host to ~/.ssh/known_hosts."
    else
        echo "$host is already in ~/.ssh/known_hosts. Skipping."
    fi
done

# ===============================
# Final Message
# ===============================

echo "Setup complete."

