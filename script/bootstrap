#!/bin/bash

mkdir $HOME/log
exec > >(tee -i $HOME/log/dotfiles_install.log)
exec 2>&1
set -x

sudo apt update

# Codespaces
if ! [ -z $CODESPACES ]; then
		echo "INFO: Setup for codespaces."

		## remove codespaces built-ins
		rm -f $HOME/.zshrc

		## setup
		mkdir $HOME/.config/nvim

		## link the things
		ln -sf $(pwd)/.zshrc $HOME/.zshrc
		ln -sf $(pwd)/.aliases $HOME/.aliases
		ln -sf $(pwd)/.gitconfig $HOME/.gitconfig
		ln -sf $(pwd)/.config/nvim/* $HOME/.config/nvim/

		## change to zsh
		sudo chsh -s "$(which zsh)" "$(whoami)"
fi

# Link dotfiles to $HOME
cat .gitignore | grep '^!.*' | grep -v '\*\*' | cut -c 2- | xargs -I % cp -R % $HOME

# Manual installs

## rbenv
if [ -z "$(which rbenv)" ]; then
		echo "INFO: Install rbenv."
		
		sudo apt install -y rbenv
		mkdir -p "$(rbenv root)"/plugins
		git clone https://github.com/rbenv/ruby-build.git "$(rbenv root)"/plugins/ruby-build
		rbenv install 3.1.0 &>/dev/null &
fi

## neovim
if [ -z "$(which nvim)" ]; then
		echo "INFO: Install neovim."

		curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim.appimage
		chmod u+x nvim.appimage
		./nvim.appimage --appimage-extract
		sudo mv squashfs-root /usr/local/squashfs-nvim
		sudo ln -s /usr/local/squashfs-nvim/AppRun /usr/local/bin/nvim

		### install vim-plug
		sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
				https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'

		### install plugins
		nvim --headless +PlugInstall +qa
fi

## keyd
if [ -z "$(which keyd)" ]; then
		git clone https://github.com/rvaiya/keyd
		cd keyd
		make && sudo make install
		sudo systemctl enable keyd && sudo systemctl start keyd

		### link config file saved as keyd.conf
		sudo ln .config/keyd/default.conf /etc/keyd/default.conf

		cd ..
fi

# Install Debs

## 1Password
if [ -z "$(which 1password)" ]; then
		echo "INFO: Install 1password."

		 curl -sS https://downloads.1password.com/linux/keys/1password.asc | sudo gpg --dearmor --output /usr/share/keyrings/1password-archive-keyring.gpg
		 echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/1password-archive-keyring.gpg] https://downloads.1password.com/linux/debian/amd64 stable main' | sudo tee /etc/apt/sources.list.d/1password.list
		 sudo mkdir -p /etc/debsig/policies/AC2D62742012EA22/
		 curl -sS https://downloads.1password.com/linux/debian/debsig/1password.pol | sudo tee /etc/debsig/policies/AC2D62742012EA22/1password.pol
		 sudo mkdir -p /usr/share/debsig/keyrings/AC2D62742012EA22
		 curl -sS https://downloads.1password.com/linux/keys/1password.asc | sudo gpg --dearmor --output /usr/share/debsig/keyrings/AC2D62742012EA22/debsig.gpg

		sudo apt update
		sudo apt install -y 1password
fi

## alacritty
if [ -z "$(which alacritty)" ]; then
		echo "INFO: Install alacritty."

		sudo apt install -y alacritty
fi

## slack
if [ -z "$(which slack)" ]; then
		echo "INFO: Install slack."

		sudo apt install -y slack
fi

## steam
if [ -z "$(which steam)" ]; then
		echo "INFO: Install steam."

		sudo apt install -y steam
fi

## tmux
if [ -z "$(which tmux)" ]; then
		echo "INFO: Install tmux."

		sudo apt install -y tmux
fi

## ripgrep
if [ -z "$(which rg)" ]; then
		echo "INFO: Install rg."

		sudo apt install -y ripgrep
fi

## fzf
if [ -z "$(which fzf)" ]; then
		echo "INFO: Install fzf."

		sudo apt install -y fzf
fi

## imwheel
if [ -z "$(which imwheel)" ]; then
		echo "INFO: Install imwheel."

		sudo apt install -y imwheel
fi

# Install Flatpaks

## flatpak
if [ -z "$(which flatpak)" ]; then
		echo "INFO: Install flatpak."

		sudo apt install -y flatpak
fi

## discord
if [ -z "$(which discord)" ]; then
		echo "INFO: Install discord."

		flatpak install --user --app discord --assumeyes
fi

## lagrange
if [ -z "$(which lagrange)" ]; then
		echo "INFO: Install lagrange."

		flatpak install --user --app lagrange --assumeyes
fi

## obsidian
if [ -z "$(which obsidian)" ]; then
		echo "INFO: Install obsidian."

		flatpak install --user --app obsidian --assumeyes
fi

## signal
if [ -z "$(which signal)" ]; then
		echo "INFO: Install signal."

		flatpak install --user --app signal --assumeyes
fi

## spotify
if [ -z "$(which spotify)" ]; then
		echo "INFO: Install spotify."

		flatpak install --user --app spotify --assumeyes
fi

## todoist
if [ -z "$(which todoist)" ]; then
		echo "INFO: Install todoist."

		flatpak install --user --app todoist --assumeyes
fi

## zoom
if [ -z "$(which zoom)" ]; then
		echo "INFO: Install zoom."

		flatpak install --user --app zoom --assumeyes
fi

# Install Brews

## brew
if [ -z "$(which brew)" ]; then
		echo "INFO: Install brew."

		/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
		eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
		sudo apt install build-essential
fi

## gcc
if [ -z "$(which gcc)" ]; then
		echo "INFO: Install gcc."

		brew install gcc
fi

## tldr
if [ -z "$(which tldr)" ]; then
		echo "INFO: Install tldr."

		brew install tldr
fi

# zsh!

## zsh
if [ -z $(which zsh) ]; then
		sudo apt install -y zsh
fi

if [[ $SHELL != *"zsh"* ]]; then
		echo "Changing shell to zsh."
		chsh -s "$(which zsh)"
fi

cp -R $(pwd)/.git $HOME
