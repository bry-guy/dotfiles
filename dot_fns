opr() {
    local env_file cmd env

    if [[ "$1" == "local-dev" ]]; then
        env_file="./app.local-dev.env"
        shift
		cmd="op run --no-masking --env-file=\"${env_file}\" $@"


    elif [[ "$1" =~ ^(dev|test|sandbox|prod)$ ]]; then
        env="$1"
        shift
        env_file="./app.env"
		cmd="APP_ENV=\"${env}\" op run --no-masking --env-file=\"${env_file}\" $@"

    else
        echo "ERROR: Invalid environment."
        return 1
    fi

    # Run command
	echo "Running command: $cmd"
    eval "$cmd"
}

chat() {
    if [ -z "$1" ]; then
        echo "Usage: chat <extension>"
        return 1
    fi

		(find . -type f -name "*.$1" -exec sh -c 'echo "{}"; cat "{}"' \;; tree) | pbcopy

}

wiki() {
		local dir
		local cmd cmd2

		local file="."

		if [[ "$1" == "as" ]] || [[ "$1" == "work" ]]; then
			file="AgentSync/"
			cmd="+Goyo"
		fi

		if [[ "$1" == "journal" ]] || [[ "$1" == "diary" ]] || [[ "$1" == "today" ]]; then
			dir="Diaries"
			file="$(date -I).md"
			cmd="+Goyo"
			cmd2="+Limelight"

		fi

		if [[ "$1" == "root" ]] || [[ "$1" == "index" ]] || [[ "$1" == "home" ]]; then
			file="index.md"
			cmd="+Goyo"
		fi

		if [[ "$1" == "brag" ]]; then
			file="AgentSync/agentsync-brag.md"
			cmd="+Goyo"
		fi

		cd ~/second-brain/"${dir}"
		nvim "${file}" $cmd $cmd2
}

brew-diff() {
    local temp_brewfile merged_brewfile brewfile_dir
    temp_brewfile=$(mktemp)
    merged_brewfile=$(mktemp)
    brewfile_dir="$HOME"

    echo "ðŸ“¢ Generating a temporary Brewfile from the current Homebrew state..."
    brew bundle dump --file="$temp_brewfile" --force | tee /dev/tty
    echo "âœ… Temporary Brewfile created: $temp_brewfile"

    echo "ðŸ“¢ Merging individual Brewfiles..."
    cat "$brewfile_dir/.brewfile."* | sort -u > "$merged_brewfile.unsorted"

    echo "ðŸ“¢ Sorting merged Brewfile for consistency..."
    {
        grep '^tap ' "$merged_brewfile.unsorted" | sort
        grep '^brew ' "$merged_brewfile.unsorted" | sort
        grep '^cask ' "$merged_brewfile.unsorted" | sort
        grep '^vscode ' "$merged_brewfile.unsorted" | sort
    } > "$merged_brewfile"
    
    echo "âœ… Sorted and merged Brewfile created: $merged_brewfile"

    diff -U 0 "$merged_brewfile" "$temp_brewfile"

    rm -f "$temp_brewfile" "$merged_brewfile" "$merged_brewfile.unsorted"
}

